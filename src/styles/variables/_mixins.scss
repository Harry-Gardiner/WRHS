/*
* Sass mixins - reusable CSS
*
* https://sass-lang.com/documentation/at-rules/mixin
*/

// Align element text - responsive
@mixin align-responsive {
	text-align: center;

	@media (min-width: $break-md) {
		text-align: start;
	}
}

// Hover animation
@mixin hover {
	transition: all 300ms ease-in-out;
	&:hover {
		opacity: 0.7;
		cursor: pointer;
	}
}

// Flex align content center axis X and Y
@mixin flex-center {
	display: flex;
	align-items: center;
	justify-content: center;
}

// Flex add space between elements
@mixin flex-between {
	display: flex;
	align-items: center;
	justify-content: space-between;
}

// Font size mixin
@function strip-unit($value) {
	@return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
	$u1: unit($min-vw);
	$u2: unit($max-vw);
	$u3: unit($min-font-size);
	$u4: unit($max-font-size);

	@if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
		& {
			font-size: $min-font-size;
			@media screen and (min-width: $min-vw) {
				font-size: calc(
					#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
						((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
				);
			}
			@media screen and (min-width: $max-vw) {
				font-size: $max-font-size;
			}
		}
	}
}
